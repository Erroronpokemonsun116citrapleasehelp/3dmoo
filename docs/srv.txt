srv_registerService 

registers a service the returning type is HANDLE_TYPE_SERVICE_UNMOUNTED, SERVICE_DIRECT
servunm->misc[0] = 0; means no new processes want to connect
servunm->misc_ptr[0] = NULL; is the fild of HANDLE_TYPE_SERVICE, SERVICE_DIRECT that want to connect

srv_GetServiceHandle

generates a HANDLE_TYPE_SERVICE, SERVICE_DIRECT
serv->misc[0] = 0; //noting happend yet
//the serv handle is added to the list
servunm->misc[0]++;
servunm->misc_ptr[0][servunm->misc[0] - 1] = serv;

wait till AcceptSession

returns HANDLE_TYPE_SERVICE_SERVER, SERVICE_DIRECT
gets the first one in the list
serv->misc[0] = HANDLE_SERV_STAT_CONNECTED | HANDLE_SERV_STAT_CONNECTEDOPEN; //status is only in serv not in sserv !!!
sserv->misc[1] = serv;
serv->misc[1] = sserv;
sserv->misc_ptr[0] = serv->misc_ptr[0] = malloc(0x200); //data to send
srv_GetServiceHandle returns




SyncRequest

copy that data to sserv->misc_ptr[0]
serv->misc[0] |= HANDLE_SERV_STAT_SYN

server is freed 
copy that data from sserv->misc_ptr[0]
serv->misc[0] &= ~HANDLE_SERV_STAT_SYN
serv->misc[0] |= HANDLE_SERV_STAT_SYN_IN_PROGRESS


ReplyAndReceive
copy that data to sserv->misc_ptr[0]
serv->misc[0] &= ~HANDLE_SERV_STAT_SYN_IN_PROGRESS
serv->misc[0] |= HANDLE_SERV_STAT_REPLY

SyncRequest freed
copy that data from sserv->misc_ptr[0]
serv->misc[0] &= ~HANDLE_SERV_STAT_REPLY